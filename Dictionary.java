/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary;

import java.io.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author SE130585
 */
public class Dictionary extends javax.swing.JFrame {

    /**
     * Creates new form Dictionary
     */
    boolean E_V = true;
    boolean addE_V = true;
    English eng = new English();
    Vietnamese vie = new Vietnamese();
    BST data = new BST();
    String fileEng = "English.txt";
    String fileVie = "Vietnamese.txt";
    boolean change = false;

    public Dictionary() {
        initComponents();
        loadData(fileEng);
        eng.balance();
        loadData(fileVie);
        vie.balance();
        loadDataSearch();
        taTranslate.setEditable(false);

    }

    public void loadDataSearch() {
        if (E_V) {
            lbLanguageSearch.setText("Eng-Vie");
            if (eng.isEmpty()) {
                return;
            }
            data = eng;
        } else {
            lbLanguageSearch.setText("Vie-Eng");
            if (vie.isEmpty()) {
                return;
            }
            data = vie;
        }
    }

    public void loadData(String filename) {
        try {
            File f = new File(filename);
            if (!f.exists()) {
                return;
            }
            FileInputStream fi = new FileInputStream(f);
            InputStreamReader ir = new InputStreamReader(fi, "UTF-8");
            BufferedReader br = new BufferedReader(ir);
            String line;
            while ((line = br.readLine()) != null) {
                boolean isWord = true;
                StringTokenizer stk = new StringTokenizer(line, ":,");
                String word = "";
                LinkedList<String> mean = new LinkedList<>();
                while (stk.hasMoreElements()) {
                    if (isWord) {
                        word = stk.nextToken().trim();
                        isWord = false;
                    } else {
                        mean.add(stk.nextToken().trim());
                    }
                }
                if (filename.equals(fileEng)) {
                    eng.addWord(word, mean);
                } else {
                    vie.addWord(word, mean);
                }
            }
            br.close();
            ir.close();
            fi.close();
        } catch (Exception e) {
        }

    }

    public void SavetoFile(String filename) {
        try {
            File fi = new File(filename);
            FileWriter fw = new FileWriter(fi);
            PrintWriter pw = new PrintWriter(fw);
            Word[] w;
            if (filename.equals(fileEng)) {
                w = new Word[eng.size];
                eng.toArray(w);
            } else {
                w = new Word[vie.size];
                vie.toArray(w);
            }
            for (int i = 0; i < w.length; i++) {
                pw.println(w[i].toString());
            }
            pw.close();
            fw.close();
        } catch (Exception e) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frame = new javax.swing.JTabbedPane();
        pnSearch = new javax.swing.JPanel();
        btSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        lbLanguageSearch = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taTranslate = new javax.swing.JTextArea();
        btRefesh = new javax.swing.JButton();
        pnADd = new javax.swing.JPanel();
        txtWord = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        taMean = new javax.swing.JTextArea();
        btSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbLanguageAdd = new javax.swing.JLabel();
        btNew = new javax.swing.JButton();
        btExit = new javax.swing.JButton();
        btSavetofile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btSearch.setText("Translate");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lbLanguageSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbLanguageSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLanguageSearch.setText("Eng-Vie");
        lbLanguageSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        lbLanguageSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbLanguageSearchMouseClicked(evt);
            }
        });

        taTranslate.setColumns(20);
        taTranslate.setRows(5);
        jScrollPane1.setViewportView(taTranslate);

        btRefesh.setText("Refesh");
        btRefesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefeshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnSearchLayout = new javax.swing.GroupLayout(pnSearch);
        pnSearch.setLayout(pnSearchLayout);
        pnSearchLayout.setHorizontalGroup(
            pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btRefesh)
                    .addGroup(pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(pnSearchLayout.createSequentialGroup()
                            .addComponent(btSearch)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lbLanguageSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        pnSearchLayout.setVerticalGroup(
            pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbLanguageSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btRefesh)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        frame.addTab("Search", pnSearch);

        txtWord.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        taMean.setColumns(20);
        taMean.setRows(5);
        jScrollPane2.setViewportView(taMean);

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        jLabel1.setText("Word");

        jLabel2.setText("Mean");

        lbLanguageAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbLanguageAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLanguageAdd.setText("Eng-Vie");
        lbLanguageAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        lbLanguageAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbLanguageAddMouseClicked(evt);
            }
        });

        btNew.setText("New");
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnADdLayout = new javax.swing.GroupLayout(pnADd);
        pnADd.setLayout(pnADdLayout);
        pnADdLayout.setHorizontalGroup(
            pnADdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnADdLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnADdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtWord, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnADdLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnADdLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btNew)
                        .addGap(18, 18, 18)
                        .addComponent(btSave))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                    .addGroup(pnADdLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbLanguageAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnADdLayout.setVerticalGroup(
            pnADdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnADdLayout.createSequentialGroup()
                .addGroup(pnADdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnADdLayout.createSequentialGroup()
                        .addContainerGap(27, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(pnADdLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbLanguageAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(txtWord, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnADdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSave)
                    .addComponent(btNew))
                .addContainerGap())
        );

        frame.addTab("Add word", pnADd);

        btExit.setText("Exit");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });

        btSavetofile.setText("Save to file");
        btSavetofile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSavetofileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frame)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSavetofile)
                        .addGap(18, 18, 18)
                        .addComponent(btExit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frame, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btExit)
                    .addComponent(btSavetofile))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbLanguageSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLanguageSearchMouseClicked
        E_V = !E_V;
        loadDataSearch();
    }//GEN-LAST:event_lbLanguageSearchMouseClicked

    private void lbLanguageAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLanguageAddMouseClicked
        // TODO add your handling code here:
        addE_V = !addE_V;
        if (addE_V) {
            lbLanguageAdd.setText("Eng-Vie");
        } else {
            lbLanguageAdd.setText("Vie-Eng");
        }
    }//GEN-LAST:event_lbLanguageAddMouseClicked

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        // TODO add your handling code here:

        loadDataSearch();
        String word = txtSearch.getText().trim();
        Word w = data.search(word);
        if (w == null) {
            return;
        }
        taTranslate.setText(w.mean.get(0) + "\n");
        taTranslate.append("Synonymous: ");
        for (int i = 1; i < w.mean.size(); i++) {
            if (i == w.mean.size() - 1) {
                taTranslate.append(" " + w.mean.get(i));
                break;
            }
            taTranslate.append(" " + w.mean.get(i) + ",");
            if (i % 5 == 0) {
                taTranslate.append("\n");
            }
        }
        
    }//GEN-LAST:event_btSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btRefeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefeshActionPerformed
        // TODO add your handling code here:
        txtSearch.setText("");
        taTranslate.setText("");
    }//GEN-LAST:event_btRefeshActionPerformed

    private void btSavetofileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSavetofileActionPerformed
        // TODO add your handling code here:
        change = false;
        SavetoFile(fileEng);
        SavetoFile(fileVie);
    }//GEN-LAST:event_btSavetofileActionPerformed

    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
        // TODO add your handling code here:
        txtWord.setText("");
        taMean.setText("");
    }//GEN-LAST:event_btNewActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        // TODO add your handling code here:
        String word = txtWord.getText();
        if (word == "") {
            return;
        }
        String mean = taMean.getText();
        String[] lmean = mean.split(",");
        LinkedList<String> limean = new LinkedList();
        for (int i = 0; i < lmean.length; i++) {
            limean.add(lmean[i].trim());
        }
        if (addE_V) {
            eng.addWord(word, limean);
            for (int i = 0; i < limean.size(); i++) {
                vie.addWord(limean.get(i), word);
            }

        } else {
            vie.addWord(word, limean);
            for (int i = 0; i < limean.size(); i++) {
                eng.addWord(limean.get(i), word);
            }
        }
        change = true;
        btNewActionPerformed(evt);
        
    }//GEN-LAST:event_btSaveActionPerformed

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        // TODO add your handling code here:
        if (change) {// data has not been saved to file
            int i = JOptionPane.showConfirmDialog(this, "Do you want to save?",
                    "Save?", JOptionPane.YES_NO_CANCEL_OPTION);
            if (i == 0) {
                btSavetofileActionPerformed(evt);
                System.exit(0);
            }
            if (i == 1) {
                System.exit(0);
            }
        } else {// data has been saved
            if (JOptionPane.showConfirmDialog(this, "Exit application?",
                    "   Exit?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
                System.exit(0);
            }
        }
    }//GEN-LAST:event_btExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dictionary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.JButton btNew;
    private javax.swing.JButton btRefesh;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSavetofile;
    private javax.swing.JButton btSearch;
    private javax.swing.JTabbedPane frame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbLanguageAdd;
    private javax.swing.JLabel lbLanguageSearch;
    private javax.swing.JPanel pnADd;
    private javax.swing.JPanel pnSearch;
    private javax.swing.JTextArea taMean;
    private javax.swing.JTextArea taTranslate;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtWord;
    // End of variables declaration//GEN-END:variables
}
